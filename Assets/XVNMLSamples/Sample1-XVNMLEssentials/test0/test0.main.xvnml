<proxy name::"test0.main" lang::"CSharp" engine::"Unity" screenWidth::1920 screenHeight::1080>
	<castDefinitions>
		<cast name::"Hana" src::"Hana/Hana.cast.xvnml"/>
	</castDefinitions>

	<sceneDefinitions>
		<scene name::"Home" 			src::$nil/>
		<scene name::"OutsideOfSchool" 	src::"School/OutsideOfSchool.scene.xvnml"/>
		<scene name::"Class1A" 			src::$nil/>
		<scene name::"Cafeteria" 		src::$nil/>
	</sceneDefinitions>

	<audioDefinitions>
		<audio name::"TestMusic" src::"BGM/SpitFireLabsTes1t.wav" pathMode::Relative/>
	</audioDefinitions>

	<dialogue name::"BasicXVNMLTutorial-Prompts">
		@Hana {
			cue_scene::"OutsideOfSchool"|
			set_cast_motion::"Interpolation"|
			set_cast_motion_duration::0.5f|
			set_text_speed::45|
			set_sound::"TestMusic"|
			enable_sound_loop|
			set_volume::100|
			play_sound|
			cast_enters_from::"Left"|
			cue_cast::("Hana","Center",0)|
			pass
		}<
		@*>Smile I've just received some great news!<
		@*>Happy>Wow You definitely want to hear this.> 
		Because this will change the way how we use XVNML2U from here on.<
		@*>Smile It's a feature that XVNML2U definitely needed.<
		@* And the feature in question...<
		?* Can you guess?{pause}>>
		(
			("Based on what I'm seeing, it looks like we've implemented prompts...")>
			@Hana You seem pretty confident...<
			?* Are you sure about your answer?{pause}>>
			(
				$> It's best practice that at every start of a prompt response
				$> you start with a Normal Cast Definition (@[cast_name]) as opposed to a 
				$> Persistent Cast Definition (@*).
				$> Although both work, starting with a Normal Cast will 
				$> keep track of who's still talking.
				("I'm positive!")>
				?Hana Are you absolutely sure?>>
				(
					("Seal in my answer!")>
					@Hana>Happy>Wow That's correct!<<

					("Now you're really scaring me...")>
					@Hana No need to be scared!<
					@*>Happy>Wow You're actually correct!<<
				)
					
				("You're making me have second thoughts...")>
				@Hana Well...<
				@*>Happy>Wow You're correct!<<
			)

			("Best cast representation?")>
			@Hana No, silly!<
			@*>V::Wow {pass}<<

			("Does it have something to do with Unity?")>
			@Hana {
					move_cast::("Hana", 0)|
					pass
			}<
			@* Actually,{del::500} it does have something to do with Unity.<
			@* More specifically,{del::500} it has something to do with the updated XVNML API
			that can be implemented to Unity.<
			@*>V::Wow {pass}<<
		)

		$> It's also best practice to start with a Normal Cast Definition
		$> at every end of a prompt.
		@Hana>Happy {react::"Jump"}IT'S PROMPTS!!!<
		@*>Smile We're in the process of taking the updated XVNML API and implementing prompts for you.<
		@* The user should be able to type in a prompt{pause}, and inside the game,{react::"Jump"|exp::"Happy"} you can click on the different responses.<
		@* From then,{del::500} you can then have branching dialogues that does different things!<
		@*>Happy A feature that's essential for creating Visual Novels!<
		?*>Smile So tell me, how do you think about XVNML2U so far?>>
		(
			("It's pretty awesome!")>
			@Hana>Happy>Wow {react::"Jump"}That's great to hear!<<

			("I'm not too sure yet...")>
			@Hana Well,{del::500} this isn't all that XVNML2U can offer.<
			@* Give it a couple of months{pause}, it'll come out super special.<
			@*>Happy I promise you that!<<

			("It could do better")>
			@Hana Well of course it can.<
			@* We're only beginning to scratch the service.<
			@* Eventually{del::500}, it'll be a tool that will change how people does 
			story-centric content inside Unity.<
			@*>Happy You can bet your lucky stars on that one.<<
		)
		
		@Hana>Smile In the future, we'll be about to do 
		a lot more with XVNML2U.<
		@* Like Cast Reactions,{del::500} 
		playing audio{del::500|sts::60} 
		{paren}not including Cast Voices{paren_end|del::500|sts::30}, 
		moving cast to a position of the screen...<
		@* {sts::45}Scene loading and transitions,{del::500} Text Motions...<
		@*>Happy And so much more!!!<
		@*>Smile If you made it this far...<
		@*>Happy Then we've officially implmented prompts!<
		?*>Smile What do you want to do today?>>
		(
			("Create more visual novels...")>
				@Hana>Happy Good choice!<
				@* I actually have a really great story idea!<
				@* Want to hear it?<<

			("Hang out with you...")>
				@Hana>Happy>Wow {react::"Jump"}Hehe!<
				@* That's very sweet!<
				@* Let's hang out then!<<
					
			("Sleep...")>
				@Hana You must be tired then.<
				@* I'll always be here if you want to do anything!<<

			("Can I hear your Japanese?")>
				@Hana>Happy>Wow {sts::20|react::"Jump"}いいよ！<
				@* どうですか？<
				@*>Smile 日本語で話してること。。。{del::1000}へんなの？<
				?* 何か話し事がありますか？>>
				(
					("Tell me how you learned Japanese?")>
						@Hana まあ、実はね。。。<
						@* 私が日本人ので、日本語で話せるよ！<
						@* 母は日本人と父さんはイギリス人です。<
						@* でもね、米国には１０年くらいで暮らしていて、全部人生で英語でほとんど話してばかりです。<
						@* おかしいようね？<<

					("What's your favorite food?")>
						@Hana 沢山食べ物が好きよ！<
						@* けど、好きな食べ物は。。。{del::1000|exp::"Happy"|clr}大福です！<
						@*>Smile とても上手くて、美味しくて。。。<
						@*>Happy それが全部を一気に食べられるも！<
						@*>Smile すべての味は好き！<
				)
				?Hana {sts::45}Did you happen to understand all that?>>
				(
					("Yes!")>
						@Hana>Happy>Wow {react::"Jump"}I'm so glad.<<
					("A little bit...")>
						@Hana Well, my Japanese is a bit off...<
						@* I only speak Japanese around my mom...<
						@* But I've spend most of my life with my British father in the United States.<
						@* So my Japanese is very rusty!<
						@*>Happy I do appreciate you listening to me though!<<
					("Not exactly...")>
						@Hana>Happy>Wow Hehe!<
						@* That's okay!<
						@*>Smile My Japanese has been rusty over my time in the United States.<
						@* So you have nothing to worry about.<<
				)
		)
	</dialogue>
</proxy>