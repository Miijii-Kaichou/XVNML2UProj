<proxy name::"DialogueMigration.Main.XVNML" engine::Unity lang::CSharp screenWidth::1920 screenHeight::1080>
    <metadata>
        <title>Dialogue Group Migration</title>
    </metadata>

    <dialogueGroup name::"Chapter1" #enableMigration #enableGroupMigration>
        <dialogue name::"Introduction">
            @ Man!<
            @ That's a really hot coffee pot.<
            @ I'm joking.<
            @ This is not how we're starting off.<
            @ Welcome to the Dialogue Group Migration Tutorial!<
            @ This is Chapter 1!<
            @ This is going to demonstrate how to transition for dialogue-to-dialogue...<
            @ as well as DialogueGroup-to_DialogueGroup.<
            @ It's especially handy for setting up a new stage, and also limiting the amount
             of Named Dialogues.<
            @ This also reduces the amount of "jump_to" calls you have to make just to
             flow through the different amounts of dialogue.<
            @ Sounds interesting, huh?<
            @ I'll be happy to tell you that the Migration System for XVNML2U is actually very simple.<
            @ This will also demonstrate using the "src" element parameters to seperate
             your groups through the File System.<
            @ And we'll also demonstrate how to use the {pound}collectFiles flag parameter to
             have a dialogue group be compiled from a collection of Dialogue files.<
            @ It's just another feature that the XVNML SCLA and XVNML2U that you'll
             might find pretty useful.<
            @ With that said, let's get started!<<
        </dialogue>
        <dialogue name::"Dialogue-To-Dialogue Migration">
            @ So, take a lot at the file being used to display all of this dialogue.<
            @ The first thing you might of noticed is the {pound}enableMigration flag parameter.<
            @ This is what allows us to do the second thing you might of realized...<
            @ The dialogue from the introduction seemlessly transitioned to the second dialogue.<
            @ That's Dialogue-to-Dialogue migration.<
            @ This is a nice feature because you can seperate your stories
             into seperate chapters without the need for Named Dialogue.<
            @ At the lowest level, when using Named Dialogue, that's a lot of parsing that
             the XVNML SCLA has to under go.<
            @ You can used Named Dialogue for things like saying a Dialogue based on a value,
             or a choice that a user made.<
            @ But as far as using them to seperate your story into Chapters...<
            @ That's what Dialogue-To-Dialogue Migration is for.<<
        </dialogue>
        <dialogue name::"DialogueGroup-To-DialogueGroup Migration.">
            @ As far as DialogueGroup-To-DialogueGroup Migration goes...<
            @ You can do that whenever you want to move from chapter to chapter.<
            @ However, most of that will be handled through scripting, giving you more control.<
            @ So unless you want to seemlessly go from chapter to chapter...<
            @ DialogueGroup-To-DialogueGroup Migration really isn't needed.<
            @ You can achieve DialogueGroup-To-DialogueGroup migration using the {pound}enableGroupMigration flag parameter.<
            @ You don't need to nest DialogueGroup elements inside a DialogueGroup element for this to work.<
            @ You can, but you don't have to.<
            @ The same can be said for the Dialogue element...<
            @ However with Dialogues, it's Best Practice to have all your dialogue grouped inside a DialogueGroup element...<
            @ Hence it being called a "DialogueGroup".<
            @ It's also best practice to handle DialogueGroup-To-DialogueGroup migration through scripting...<
            @ as opposed to having XVNML2U do it by itself...<
            @ Because what if you want to trigger an event prior to moving to the next chapter?<
            @ You could achieve that using macros, but doing it through scripting will give you
             much more control over when should you migrate to the next DialogueGroup.<
            @ This can especially be said for using XVNML2U to make an Action RPG.<
            @ At that point, DialogueGroup-To-DialogueGroup Migrations are not even needed, and
             it's expected of you to handle the control of such things through scripting.<
            @ However Visual Novels, you may want to have a splash screen telling you what chapter you're on.<
            @ At that point, you can combine DialogueGroup-To-DialogueGroup Migration and macros to do
             just that.<
            @ This is achieved by calling a macro like "presentSplashScreen" on every first Dialogue in a
             dialogue system.<
            @ And make sure the splash screen is done before the dialogue actually begins.<
            @ Again, it's better to simply trigger the event before you actually play all the dialogue inside
             the DialogueGroup element, decreasing the usage of macros.<
            @ And that will slowly make parsing each XVNML file more performant as
             your project scales.<<
        </dialogue>
        <dialogue name::"Conclusion">
            @ So yeah, you can do a lot of simple stuff utilizing Dialogue-To-Dialogue Migration
             and DialogueGroup-To-DialogueGroup Migration.<
            @ Just for future simpicity, we can refer to these 2 kinds of migrations as
             D2D Migration and DG2DG Migration.<
            @ Be sure to not confused the {pound}enableMigration and {pound}enableGroupMigration 
             flag paramters.<
            @ And you should do just fine.<
            @ Now, the following 2 Chapters won't be teaching you anything...<
            @ But instead, they will more be demonstrating the usage of these flags,
             as well another flag called {pound}collectFiles.<
            @ These chapters will be presenting you a basic story using basic XVNML Best Practices.<
            @ There will not be using prompts in any fashion, nor will they utilize the
             StageController, Props System or Cast System.<
            @ Again, all of this is just demonstration purposes.<
            @ With this chapter however... Not so much...<
            ? Would you like to proceed to the next chapter?>>
            (
                ("Yes")>
                @ Sounds good!<
                @ We'll be proceeding to the Second Chapter.<<
                ("No")>
                @ {lowerFlag::"enableGroupMigration"|pass}<
                @ Alright. We'll simply send you to the main menu.<
                @ From there, you are free to select whatever chapter you want
                 as a reference to using XVNML2U and the Migration System.<<
            )
        </dialogue>
    </dialogueGroup>
    <dialogueGroup name::"Chapter2" src::"../Sample3-DialogueGroupMigration/Chapters/Chapter2.dialogue.group.xvnml" #enableMigration/>
    <dialogueGroup name::"Chapter3" src::"../Sample3-DialogueGroupMigration/Chapters/Chapter3" #collectFiles #enableMigration/>
</proxy>